import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { CssBaseline, ThemeProvider } from "@mui/material";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import { theme } from "@/theme";
import "@/theme/global.css";
import { SnackbarProvider } from "@/app/_layouts/snackbar-provider";
import Layout from "./_layouts/layout";
import { getLocale } from "next-intl/server";
import { ClientLocaleProvider } from "./_components/client-locale-provider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Get initial locale from server
  const serverLocale = await getLocale();

  // Load both message sets
  const [viMessages, enMessages] = await Promise.all([
    import("../../messages/vi.json").then((module) => module.default),
    import("../../messages/en.json").then((module) => module.default),
  ]);

  return (
    <html lang={serverLocale}>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AppRouterCacheProvider options={{ key: "css" }}>
          <CssBaseline />
          <ClientLocaleProvider
            serverLocale={serverLocale}
            messages={{ vi: viMessages, en: enMessages }}
          >
            <SnackbarProvider>
              <ThemeProvider theme={theme}>
                <Layout>{children}</Layout>
              </ThemeProvider>
            </SnackbarProvider>
          </ClientLocaleProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
